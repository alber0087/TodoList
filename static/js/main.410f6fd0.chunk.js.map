{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["TodoItem","_ref","todo","toggleTodo","id","task","completed","react_default","a","createElement","type","checked","onChange","className","TodoList","todos","map","key","KEY","App","_useState","useState","_useState2","Object","slicedToArray","setTodos","todoTaskRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","react","class","newTodos","toConsumableArray","find","ref","placeholder","onClick","current","value","prevToDos","concat","uuidv4","filter","length","ReactDOM","render","App_App","document","getElementById"],"mappings":"uKAEO,SAASA,EAATC,GAAwC,IAApBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,WACrBC,EAAwBF,EAAxBE,GAAIC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAMlB,OACIC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,WAAWC,QAASL,EAAWM,SAN3B,WACpBT,EAAWC,IAK+DS,UAAU,QAC/ER,GCTN,SAASS,EAATb,GAAyC,IAArBc,EAAqBd,EAArBc,MAAOZ,EAAcF,EAAdE,WAChC,OACEI,EAAAC,EAAAC,cAAA,UACKM,EAAMC,IAAI,SAACd,GAAD,OACPK,EAAAC,EAAAC,cAACT,EAAD,CAAUiB,IAAKf,EAAKE,GAAIF,KAAMA,EAAMC,WAAYA,mBCAtDe,eAAM,iBAEL,SAASC,IAAM,IAAAC,EACQC,mBAAS,CAC/B,CAAEjB,GAAI,EAAGC,KAAM,UAAWC,WAAW,KAFvBgB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACXL,EADWO,EAAA,GACJG,EADIH,EAAA,GAKZI,EAAcC,mBAEpBC,oBAAU,WACN,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQf,IACjDW,GACCJ,EAASI,IAEd,IAEHD,oBAAU,WACNI,aAAaE,QAAQhB,EAAKY,KAAKK,UAAUpB,KAC1C,CAACA,IAyBJ,OACIR,EAAAC,EAAAC,cAAC2B,EAAA,SAAD,KACI7B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACXN,EAAAC,EAAAC,cAAA,OAAKL,GAAG,WACJG,EAAAC,EAAAC,cAAA,MAAII,UAAU,UAAd,mBACAN,EAAAC,EAAAC,cAAA,KAAG4B,MAAM,mBAEb9B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAACK,EAAD,CAAUC,MAAOA,EAAOZ,WA/BrB,SAACC,GAChB,IAAMkC,EAAQf,OAAAgB,EAAA,EAAAhB,CAAOR,GACfb,EAAOoC,EAASE,KAAK,SAACtC,GAAD,OAAUA,EAAKE,KAAOA,IACjDF,EAAKI,WAAaJ,EAAKI,UACvBmB,EAASa,OA6BD/B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,SAAOgC,IAAKf,EAAahB,KAAK,OAAOgC,YAAY,gBACjDnC,EAAAC,EAAAC,cAAA,UAAQI,UAAU,UAAU8B,QA5BtB,WAClB,IAAMtC,EAAOqB,EAAYkB,QAAQC,MACpB,KAATxC,IAEJoB,EAAS,SAACqB,GACN,SAAAC,OAAAxB,OAAAgB,EAAA,EAAAhB,CAAWuB,GAAX,CAAsB,CAAE1C,GAAI4C,cAAU3C,OAAMC,WAAW,OAG3DoB,EAAYkB,QAAQC,MAAQ,QAoBoCtC,EAAAC,EAAAC,cAAA,KAAG4B,MAAM,kBAC7D9B,EAAAC,EAAAC,cAAA,UAAQI,UAAU,MAAM8B,QAlBjB,WACnB,IAAML,EAAWvB,EAAMkC,OAAO,SAAC/C,GAAD,OAAWA,EAAKI,YAC9CmB,EAASa,KAgBqD/B,EAAAC,EAAAC,cAAA,KAAG4B,MAAM,qBAE/D9B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAAf,aACeE,EAAMkC,OAAO,SAAC/C,GAAD,OAAWA,EAAKI,YAAW4C,OADvD,yBAIJ3C,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,mDClEhB0C,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.410f6fd0.chunk.js","sourcesContent":["import React from 'react'\n\nexport function TodoItem({ todo, toggleTodo }) {\n    const { id, task, completed } = todo;\n\n    const handleTodoClick = () => {\n        toggleTodo(id);\n    };\n\n    return (  \n        <li>\n            <input type=\"checkbox\" checked={completed} onChange={handleTodoClick} className=\"ma1\"/>  \n            {task}\n        </li>\n    )\n}\n","import React from 'react';\nimport { TodoItem } from './TodoItem';\n\nexport function TodoList({ todos, toggleTodo }) {\n  return (\n    <ul>\n        {todos.map((todo) => (\n            <TodoItem key={todo.id} todo={todo} toggleTodo={toggleTodo} />\n        ))}\n    </ul>\n  );\n}\n","import React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport { TodoList } from './components/TodoList';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css'\nimport 'tachyons';\n\n\nconst KEY = \"todoApp.todos\";\n\nexport function App() {\n    const [todos, setTodos] = useState([\n        { id: 1, task: \"Tarea 1\", completed: false },\n    ]);\n\n    const todoTaskRef = useRef();\n\n    useEffect(() => {\n        const storedTodos = JSON.parse(localStorage.getItem(KEY));\n        if(storedTodos) {\n            setTodos(storedTodos);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(KEY, JSON.stringify(todos));\n    }, [todos]);\n\n    const toggleTodo = (id) => {\n        const newTodos = [...todos];\n        const todo = newTodos.find((todo) => todo.id === id);\n        todo.completed = !todo.completed;\n        setTodos(newTodos);\n    };\n\n    const handleTodoAdd = () => {\n        const task = todoTaskRef.current.value;\n        if (task === '') return;\n\n        setTodos((prevToDos) => {\n            return [...prevToDos, { id: uuidv4(), task, completed: false }];\n        });\n\n        todoTaskRef.current.value = null;\n    };\n\n    const handleClearAll = () => {\n        const newTodos = todos.filter((todo) => !todo.completed);\n        setTodos(newTodos);\n    };\n\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <div id=\"heading\">\n                    <h1 className=\"avenir\">Lista de tareas</h1>\n                    <i class=\"fi fi-rr-edit\"></i>\n                </div>\n                <div className=\"box-mid\">\n                    <TodoList todos={todos} toggleTodo={toggleTodo} />\n                </div>\n                <div className=\"box-container\">\n                    <input ref={todoTaskRef} type=\"text\" placeholder=\"Nueva Tarea\" />\n                    <button className=\"btn ma2\" onClick={handleTodoAdd}><i class=\"fi fi-rr-add\"></i></button>\n                    <button className=\"btn\" onClick={handleClearAll} ><i class=\"fi fi-rr-trash\"></i></button>\n                </div>\n                <div className=\"tasksLeft\">\n                    Te quedan {todos.filter((todo) => !todo.completed).length} tareas por terminar\n                </div>\n            </div>\n            <footer>\n                <p>Copyright 2022 Alberto Rodr√≠guez.</p>\n            </footer>  \n        </Fragment>\n    );\n} ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}